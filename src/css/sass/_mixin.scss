@import "mediaqueries";

$min-font-size: 20px;

html {
    font-size: $min-font-size;

    @include iphone5 {
        font-size: $min-font-size * 640 / 750;
    }

    @include iphone6plus {
        font-size: $min-font-size * 828 / 750;
    }

    @include max-screen(320px) {
        font-size: $min-font-size * 640 / 750;
    }

    @include min-screen(414px) {
        font-size: $min-font-size * 828 / 750;
    }
}

@function size($value, $parent: false) {
    @if $parent {
        @return $value / $parent * 100%;
    }
    @return #{$value / 2 / $min-font-size}rem;
}

@function size-h($value) {
    @return size($value, 750px);
}

@function size-v($value) {
    @return size($value, 1158px);
}


$pi: 3.14159265359;
@function pow($base, $exp) {
    $value: $base;
    @if $exp == 0 {
        $value: 1;
    }
    @else if $base == 0 {
        $value: 0;
    }
    @else if $exp > 1 {
        @for $i from 2 through $exp {
            $value: $value * $base;
        };
    }
    @else if $exp < 1 {
        @for $i from 0 through -$exp {
            $value: $value / $base;
        }
    }
    @return $value;
}

@function fact($val) {
    $value: 1;
    @if $val > 0 {
        @for $i from 1 through $val {
            $value: $value * $i;
        }
    }
    @return $value;
}

@function sin($angle, $degrees: true) {
    $sin: 0;
    @if $degrees {
        $angle: $angle / 180 * $pi;
    }
    @for $n from 0 through 10 {
        $sin: $sin + (pow(-1, $n) / fact(2 * $n + 1)) * pow($angle, 2 * $n + 1);
    }
    @return $sin;
}

@function cos($angle, $degrees: true) {
    $cos: 0;
    @if $degrees {
        $angle: $angle / 180 * $pi;
    }
    @for $n from 0 through 10 {
        $cos: $cos + (pow(-1, $n) / fact(2 * $n)) * pow($angle, 2 * $n);
    }
    @return $cos;
}

@mixin clearfix {
    &:before,
    &:after {
        content: '';
        display: table;
    }
    &:after {
        clear: both;
        overflow: hidden;
    }
}

@mixin css3($property, $value, $moz, $webkit, $o, $ms, $khtml, $official: true) {
    @if $webkit { -webkit-#{$property}: $value; }
    @if $khtml { -khtml-#{$property}: $value; }
    @if $moz { -moz-#{$property}: $value; }
    @if $ms { -ms-#{$property}: $value; }
    @if $o { -o-#{$property}: $value; }
    @if $official { #{$property}: $value; }
}

@mixin css3-value($property, $value, $moz, $webkit, $o, $ms, $khtml, $official: true) {
    @if $webkit { #{$property}: -webkit-#{$value}; }
    @if $khtml { #{$property}: -khtml-#{$value}; }
    @if $moz { #{$property}: -moz-#{$value}; }
    @if $ms { #{$property}: -ms-#{$value}; }
    @if $o { #{$property}: -o-#{$value}; }
    @if $official { #{$property}: #{$value}; }
}

@mixin animation($ap) {
    $ap: unquote($ap);
    @include css3(animation, $ap, -moz, -webkit, -o, -ms, not -khtml, official);
}

@mixin animation-delay($ap) {
    $ap: unquote($ap);
    @include css3(animation-delay, $ap, -moz, -webkit, -o, -ms, not -khtml, official);
}

@mixin animation-duration($ap) {
    $ap: unquote($ap);
    @include css3(animation-duration, $ap, -moz, -webkit, -o, -ms, not -khtml, official);
}

@mixin animation-fill-mode($ap) {
    $ap: unquote($ap);
    @include css3(animation-fill-mode, $ap, -moz, -webkit, -o, -ms, not -khtml, official);
}

@mixin backface-visibility($ap) {
    $ap: unquote($ap);
    @include css3(backface-visibility, $ap, -moz, -webkit, -o, -ms, not -khtml, official);
}

@mixin background-image($ap) {
    $ap: unquote($ap);
    @include css3-value(background-image, $ap, -moz, -webkit, -o, -ms, not -khtml, official);
}

@mixin background-size($ap) {
    $ap: unquote($ap);
    @include css3(background-size, $ap, not -moz, not -webkit, not -o, not -ms, not -khtml, official);
}

@mixin box-orient($ap) {
    $ap: unquote($ap);
    @include css3(box-orient, $ap, not -moz, -webkit, not -o, not -ms, not -khtml, official);
}

@mixin box-shadow($ap) {
    $ap: unquote($ap);
    @include css3(box-shadow, $ap, -moz, -webkit, -o, -ms, not -khtml, official);
}

@mixin box-sizing($ap) {
    $ap: unquote($ap);
    @include css3(box-sizing, $ap, -moz, -webkit, -o, -ms, not -khtml, official);
}

@mixin display($ap) {
    $ap: unquote($ap);
    @include css3-value(display, $ap, not -moz, -webkit, not -o, not -ms, not -khtml, official);
}

@mixin filter($ap) {
    $ap: unquote($ap);
    @include css3(filter, $ap, -moz, -webkit, -o, -ms, not -khtml, official);
}

@mixin line-clamp($ap) {
    $ap: unquote($ap);
    @include css3(line-clamp, $ap, not -moz, -webkit, not -o, not -ms, not -khtml, official);
}

@mixin perspective($ap) {
    $ap: unquote($ap);
    @include css3(perspective, $ap, -moz, -webkit, -o, -ms, not -khtml, official);
}

@mixin perspective-origin($ap) {
    $ap: unquote($ap);
    @include css3(perspective-origin, $ap, -moz, -webkit, -o, -ms, not -khtml, official);
}

@mixin touch-action($ap) {
    $ap: unquote($ap);
    @include css3(touch-action, $ap, not -moz, not -webkit, not -o, -ms, not -khtml, official);
}

@mixin transform($ap) {
    $ap: unquote($ap);
    @include css3(transform, $ap, -moz, -webkit, -o, -ms, not -khtml, official);
}

@mixin transform-origin($ap) {
    $ap: unquote($ap);
    @include css3(transform-origin, $ap, -moz, -webkit, -o, -ms, not -khtml, official);
}

@mixin transform-style($ap) {
    $ap: unquote($ap);
    @include css3(transform-style, $ap, -moz, -webkit, -o, -ms, not -khtml, official);
}

@mixin transition($ap) {
    $ap: unquote($ap);
    @include css3(transition, $ap, -moz, -webkit, -o, -ms, not -khtml, official);
}

@mixin transition-delay($ap) {
    $ap: unquote($ap);
    @include css3(transition-delay, $ap, -moz, -webkit, -o, -ms, not -khtml, official);
}

@mixin transition-duration($ap) {
    $ap: unquote($ap);
    @include css3(transition-duration, $ap, -moz, -webkit, -o, -ms, not -khtml, official);
}

@mixin transition-property($ap) {
    @include css3(transition-property, $ap, -moz, -webkit, -o, -ms, not -khtml, official);
}

@mixin transition-timing-function($ap) {
    $ap: unquote($ap);
    @include css3(transition-timing-function, $ap, -moz, -webkit, not -o, -ms, not -khtml, official);
}

@mixin user-select($ap) {
    $ap: unquote($ap);
    @include css3(user-select, $ap, -moz, -webkit, -o, -ms, not -khtml, official);
}

@mixin wh($width, $height, $parentWidth: false) {
    @if $parentWidth {
        padding-top: size($height, $parentWidth);
        width: size($width, $parentWidth);
    }
    @else {
        padding-top: size-h($height);
        width: size-h($width);
    }
}


@mixin keyframe($name) {
    @keyframes #{$name} { @content; }
    @-ms-keyframes #{$name} { @content; }
    @-moz-keyframes #{$name} { @content; }
    @-webkit-keyframes #{$name} { @content; }
}


%clearfix {
    @include clearfix;
}

%text-ellipsis {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    word-wrap: break-word;
}
